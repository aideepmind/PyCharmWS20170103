import pandas as pd
from sklearn.ensemble import RandomForestClassifier
from sklearn.datasets import load_svmlight_file
from sklearn.model_selection import train_test_split
from sklearn.model_selection import GridSearchCV

# load train data
X_train, labels_train = load_svmlight_file('E:\PyCharmWS20170103\kaggle\Quora_Question_Pairs\Feat\solution\LSA_and_stats_feat_Apr28\Run1\Fold1/train.feat')

# use 20000 rows
X_train_part = X_train[:20000]
labels_train_part = labels_train[:20000]
# train
param_grid_rf = {
    'max_depth': [3, 5, 7]
}
rf = GridSearchCV(
    estimator = RandomForestClassifier(
        n_estimators=500,
        criterion="gini",
        max_depth=None,
        min_samples_split=2,
        min_samples_leaf=1,
        min_weight_fraction_leaf=0.,
        max_features="auto",
        max_leaf_nodes=None,
        min_impurity_split=1e-7,
        bootstrap=True,
        oob_score=False,
        n_jobs=1,
        random_state=None,
        verbose=0,
        warm_start=False,
        class_weight=None),
    param_grid=param_grid_rf,
    n_jobs=1,
    iid=False,
    cv=5)
rf.fit(X_train_part, labels_train_part)
rf.grid_scores_, rf.best_params_, rf.best_score_
imp = rf.best_estimator_ .feature_importances_
feat_names = ['count_of_question1_unigram',
 'count_of_unique_question1_unigram',
 'ratio_of_unique_question1_unigram',
 'count_of_question1_bigram',
 'count_of_unique_question1_bigram',
 'ratio_of_unique_question1_bigram',
 'count_of_question1_trigram',
 'count_of_unique_question1_trigram',
 'ratio_of_unique_question1_trigram',
 'count_of_digit_in_question1',
 'ratio_of_digit_in_question1',
 'count_of_question2_unigram',
 'count_of_unique_question2_unigram',
 'ratio_of_unique_question2_unigram',
 'count_of_question2_bigram',
 'count_of_unique_question2_bigram',
 'ratio_of_unique_question2_bigram',
 'count_of_question2_trigram',
 'count_of_unique_question2_trigram',
 'ratio_of_unique_question2_trigram',
 'count_of_digit_in_question2',
 'ratio_of_digit_in_question2',
 'count_of_question1_unigram_in_question2',
 'ratio_of_question1_unigram_in_question2',
 'count_of_question2_unigram_in_question1',
 'ratio_of_question2_unigram_in_question1',
 'count_of_question1_bigram_in_question2',
 'ratio_of_question1_bigram_in_question2',
 'count_of_question2_bigram_in_question1',
 'ratio_of_question2_bigram_in_question1',
 'count_of_question1_trigram_in_question2',
 'ratio_of_question1_trigram_in_question2',
 'count_of_question2_trigram_in_question1',
 'ratio_of_question2_trigram_in_question1',
 'pos_of_question1_unigram_in_question2_min',
 'pos_of_question1_unigram_in_question2_mean',
 'pos_of_question1_unigram_in_question2_median',
 'pos_of_question1_unigram_in_question2_max',
 'pos_of_question1_unigram_in_question2_std',
 'normalized_pos_of_question1_unigram_in_question2_min',
 'normalized_pos_of_question1_unigram_in_question2_mean',
 'normalized_pos_of_question1_unigram_in_question2_median',
 'normalized_pos_of_question1_unigram_in_question2_max',
 'normalized_pos_of_question1_unigram_in_question2_std',
 'pos_of_question2_unigram_in_question1_min',
 'pos_of_question2_unigram_in_question1_mean',
 'pos_of_question2_unigram_in_question1_median',
 'pos_of_question2_unigram_in_question1_max',
 'pos_of_question2_unigram_in_question1_std',
 'normalized_pos_of_question2_unigram_in_question1_min',
 'normalized_pos_of_question2_unigram_in_question1_mean',
 'normalized_pos_of_question2_unigram_in_question1_median',
 'normalized_pos_of_question2_unigram_in_question1_max',
 'normalized_pos_of_question2_unigram_in_question1_std',
 'pos_of_question1_bigram_in_question2_min',
 'pos_of_question1_bigram_in_question2_mean',
 'pos_of_question1_bigram_in_question2_median',
 'pos_of_question1_bigram_in_question2_max',
 'pos_of_question1_bigram_in_question2_std',
 'normalized_pos_of_question1_bigram_in_question2_min',
 'normalized_pos_of_question1_bigram_in_question2_mean',
 'normalized_pos_of_question1_bigram_in_question2_median',
 'normalized_pos_of_question1_bigram_in_question2_max',
 'normalized_pos_of_question1_bigram_in_question2_std',
 'pos_of_question2_bigram_in_question1_min',
 'pos_of_question2_bigram_in_question1_mean',
 'pos_of_question2_bigram_in_question1_median',
 'pos_of_question2_bigram_in_question1_max',
 'pos_of_question2_bigram_in_question1_std',
 'normalized_pos_of_question2_bigram_in_question1_min',
 'normalized_pos_of_question2_bigram_in_question1_mean',
 'normalized_pos_of_question2_bigram_in_question1_median',
 'normalized_pos_of_question2_bigram_in_question1_max',
 'normalized_pos_of_question2_bigram_in_question1_std',
 'pos_of_question1_trigram_in_question2_min',
 'pos_of_question1_trigram_in_question2_mean',
 'pos_of_question1_trigram_in_question2_median',
 'pos_of_question1_trigram_in_question2_max',
 'pos_of_question1_trigram_in_question2_std',
 'normalized_pos_of_question1_trigram_in_question2_min',
 'normalized_pos_of_question1_trigram_in_question2_mean',
 'normalized_pos_of_question1_trigram_in_question2_median',
 'normalized_pos_of_question1_trigram_in_question2_max',
 'normalized_pos_of_question1_trigram_in_question2_std',
 'pos_of_question2_trigram_in_question1_min',
 'pos_of_question2_trigram_in_question1_mean',
 'pos_of_question2_trigram_in_question1_median',
 'pos_of_question2_trigram_in_question1_max',
 'pos_of_question2_trigram_in_question1_std',
 'normalized_pos_of_question2_trigram_in_question1_min',
 'normalized_pos_of_question2_trigram_in_question1_mean',
 'normalized_pos_of_question2_trigram_in_question1_median',
 'normalized_pos_of_question2_trigram_in_question1_max',
 'normalized_pos_of_question2_trigram_in_question1_std',
 'jaccard_coef_of_unigram_between_question1_question2',
 'jaccard_coef_of_bigram_between_question1_question2',
 'jaccard_coef_of_trigram_between_question1_question2',
 'dice_dist_of_unigram_between_question1_question2',
 'dice_dist_of_bigram_between_question1_question2',
 'dice_dist_of_trigram_between_question1_question2',
 'question1_tfidf_common_vocabulary_question2_tfidf_common_vocabulary_tfidf_cosine_sim',
 'question1_tfidf_common_vocabulary_common_svd100',
 'question2_tfidf_common_vocabulary_common_svd100',
 'ratio_of_question1_question2_unigram_share',
 'ratio_of_question1_question2_unigram_share_tfidf']
imp = pd.DataFrame({'feature': feat_names, 'score': imp[:105]})
print(imp.sort(['score'], ascending=[0]))  # 按照特征重要性, 进行降序排列, 最重要的特征在最前面
imp = imp.sort(['score'], ascending=[0])
imp.to_csv("kaggle/Quora_Question_Pairs/temp/feature_importances.csv", index=False)